const express = require('express');
const dotenv = require('dotenv');
const mongoose = require('mongoose');
const connect = require('./configs/database');
const winston = require('winston');
require('winston-daily-rotate-file'); // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ä–æ—Ç–∞—Ü–∏—é —Ñ–∞–π–ª–æ–≤

dotenv.config({ path: "./.env" });

const authRoutes = require('./routes/authRoutes');
const registerRoutes = require('./routes/registerRoutes');
const mainRoutes = require('./routes/mainRoutes');
const accountRoutes = require('./routes/accountRoutes');

const app = express();
const PORT = process.env.PORT;

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–µ—Ä–∞ —Å —Ä–æ—Ç–∞—Ü–∏–µ–π —Ñ–∞–π–ª–æ–≤
const logTransport = new winston.transports.DailyRotateFile({
  filename: 'logs/server-%DATE%.log',
  datePattern: 'YYYY-MM-DD',
  zippedArchive: true,
  maxSize: '20m',
  maxFiles: '30d' // –•—Ä–∞–Ω–∏—Ç—å –ª–æ–≥–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π
});

const logger = winston.createLogger({
  level: 'info',
  format: winston.format.combine(
    winston.format.timestamp(),
    winston.format.simple()
  ),
  transports: [
    new winston.transports.Console({ format: winston.format.simple() }),
    logTransport
  ],
});

app.use(express.json());

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
app.use((req, res, next) => {
  logger.info(`üì© –ü—Ä–∏—à–µ–ª –∑–∞–ø—Ä–æ—Å: ${req.method} ${req.originalUrl}`);
  next(); // –ü–µ—Ä–µ–¥–∞–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ª–µ–¥—É—é—â–µ–º—É middleware
});

// –ú–∞—Ä—à—Ä—É—Ç—ã
app.use('/api/auth', authRoutes);
app.use('/api/register', registerRoutes);
app.use('/api/main', mainRoutes);
app.use('/api/account', accountRoutes);

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
app.use((err, req, res, next) => {
  if (err) {
    logger.error(`‚ùå –û—à–∏–±–∫–∞: ${err.message} | –°—Ç–∞—Ç—É—Å: ${err.status || 500}`);
    res.status(err.status || 500).send(err.message);
  }
  next(); // –ü–µ—Ä–µ–¥–∞–µ–º –æ—à–∏–±–∫—É –¥–∞–ª—å—à–µ
});

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
mongoose.connect(process.env.BD_MONGO_URI)
  .then(() => {
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ MongoDB');

    // –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
    app.listen(PORT, () => {
      console.log(`üöÄ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);

      connect.sync()
        .then(() => console.log('üìÑ –¢–∞–±–ª–∏—Ü—ã —É—Å–ø–µ—à–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã!'))
        .catch((err) => console.error('‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Ç–∞–±–ª–∏—Ü: ', err));
    });
  })
  .catch((error) => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB:', error);
  });

module.exports = app;
